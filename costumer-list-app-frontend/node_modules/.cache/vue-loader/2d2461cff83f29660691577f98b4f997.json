{"remainingRequest":"D:\\ProjetoBugHunt\\CRUDEmpresas\\costumer-list-app-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProjetoBugHunt\\CRUDEmpresas\\costumer-list-app-frontend\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProjetoBugHunt\\CRUDEmpresas\\costumer-list-app-frontend\\src\\views\\Home.vue","mtime":1623298382026},{"path":"D:\\ProjetoBugHunt\\CRUDEmpresas\\costumer-list-app-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ProjetoBugHunt\\CRUDEmpresas\\costumer-list-app-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\ProjetoBugHunt\\CRUDEmpresas\\costumer-list-app-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ProjetoBugHunt\\CRUDEmpresas\\costumer-list-app-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovL2ltcG9ydCB7IHNlcnZlciB9IGZyb20gIi4uL2hlbHBlciI7DQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICB0YXNrczogW10sDQogICAgfTsNCiAgfSwNCg0KICBtb3VudGVkKCkgew0KICAgIGF4aW9zDQogICAgICAuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjMwMDAvdGFza3MiKQ0KICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOw0KICAgICAgICB0aGlzLnRhc2tzID0gcmVzcG9uc2UuZGF0YTsNCiAgICAgIH0pDQogICAgICAuY2F0Y2goKGVycm9yKSA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsNCiAgICAgIH0pOw0KICB9LA0KDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5mZXRjaFRhc2tzKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBmZXRjaFRhc2tzKCkgew0KICAgICAgYXhpb3MNCiAgICAgICAgLmdldCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL3Rhc2tzIikNCiAgICAgICAgLnRoZW4oKGRhdGEpID0+ICh0aGlzLnRhc2tzID0gZGF0YS5kYXRhKSk7DQogICAgfSwNCiAgICBkZWxldGVUYXNrKHRhc2tzLCBpZCkgew0KICAgICAgYXhpb3MNCiAgICAgICAgLmRlbGV0ZSgiaHR0cDovL2xvY2FsaG9zdDozMDAwL3Rhc2tzLyIgKyBpZCkNCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB0aGlzLnRhc2tzLnNwbGljZShpbmRleCwgMSkpOw0KICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <h1>Lista de Empresas no BD</h1>\r\n      <div v-if=\"tasks.length === 0\">\r\n        <h2>Projeto BugHunt</h2>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <table v-show=\"tasks.length > 0\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nome da Empresa</th>\r\n            <th>Telefone</th>\r\n            <th>Status</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"task in tasks\" v-bind:key=\"task.id\">\r\n            <td>{{ task.nomeempresa }}</td>\r\n            <td>{{ task.telefone }}</td>\r\n            <td>{{ task.status }}</td>\r\n            <td>\r\n              <div>\r\n                <div style=\"margin-bottom: 20px\">\r\n                  <router-link :to=\"{ name: 'Edit', params: { id: task._id } }\"\r\n                    >Editar Empresa\r\n                  </router-link>\r\n                  <button @click=\"deleteTask(task, task._id)\">\r\n                    Deletar Empresa\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//import { server } from \"../helper\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    axios\r\n      .get(\"http://localhost:3000/tasks\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.tasks = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  },\r\n\r\n  created() {\r\n    this.fetchTasks();\r\n  },\r\n  methods: {\r\n    fetchTasks() {\r\n      axios\r\n        .get(\"http://localhost:3000/tasks\")\r\n        .then((data) => (this.tasks = data.data));\r\n    },\r\n    deleteTask(tasks, id) {\r\n      axios\r\n        .delete(\"http://localhost:3000/tasks/\" + id)\r\n        .then((response) => this.tasks.splice(index, 1));\r\n      window.location.reload();\r\n    },\r\n  },\r\n};\r\n</script>"]}]}